
- property: function
  type: fixity
  applicability: intent function head
  effect: >
    the function head is voiced followed by a connector such as "of"
    or "applied" to, followed by the arguments separated by connecting
    words such as "comma" or "and"
  examples:
    - intent: "f:function(x,y)"
      en: [f of x comma y, f of x and y]
      fr: f de x et y

- property: prefix
  type: fixity
  applicability: intent function head
  effect: >
    the function followed by the arguments are voiced, with no connecting words.
  examples:
    - intent: "f:prefix(x,y)"
      en: "f x y"

- property: postfix
  type: fixity
  applicability: intent function head
  effect: >
    the arguments followed by the function are voiced, with no connecting words.
  examples:
    - intent: "f:postfix(x)"
      en: "x f"


- property: infix
  type: fixity
  applicability: intent function head
  effect: >
    the arguments are voiced, separated by the function, which may be repeated if
    there are more than two arguments.
  examples:
    - intent: "f:infix(x,y)"
      en: "x f y"


- property: silent
  type: fixity
  applicability: intent function head
  effect: >
    the arguments are voiced with no connecting words. The function head is not read.
  examples:
    - intent: "f:silent(x,y)"
      en: "x y"


- property: array
  type: table
  applicability: mtable
  effect: "the table should read the rows and columns with the default order row-first unless `array:by-column` is specified.
    If `by-columns` is used, column first order is used." 
  examples:
    - intent: ":array:by-columns"
      mathml: |
         <mtable arg='m' intent=':array:by-column'>
          <mtr><mtd><mi>a</mi></mtd><mtd><mi>b</mi></mtd></mtr>
          <mtr><mtd><mi>c</mi></mtd><mtd><mi>d</mi></mtd></mtr>
         </mtable>
      en: "the 2 by 2 array; column 1; a; row 2; c; column 2; b; row 2; d"

- property: matrix
  type: table
  applicability: mtable
  effect: the table should be read in a style suitable for matrices
  examples:
    - intent: ":matrix"
      mathml: |
        <mrow intent='$m'>
         <mo>[</mo>
         <mtable arg='m' intent=':matrix'>
          <mtr><mtd><mi>a</mi></mtd><mtd><mi>b</mi></mtd></mtr>
          <mtr><mtd><mi>c</mi></mtd><mtd><mi>d</mi></mtd></mtr>
         </mtable>
         <mo>]</mo>
        </mrow>
      en: "the 2 by 2 matrix; column 1; a; column 2; b; column 1; c; column 2; d"

- property: piecewise
  type: table
  applicability: mrow(mtable)
  effect: the table should be read in a style suitable for a piecewise definition 
  examples:
    - intent: ":piecewise"
      mathml: |
        <mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo>
        <mo>=</mo>
        <mrow>
          <mo>{</mo>
          <mtable intent=":piecewise" columnalign="right left" columnspacing="0" rowspacing=".2em">
            <mtr>
              <mtd><mo>&#x2212;</mo><mi>x</mi></mtd>
              <mtd><mtext>if</mtext></mtd>
              <mtd><mi>x</mi><mo>&lt;</mo><mn>0</mn></mtd>
            </mtr>
            <mtr>
              <mtd><mi>x</mi></mtd>
              <mtd><mtext>if</mtext></mtd>
              <mtd><mi>x</mi><mo>&#x2265;</mo><mn>0</mn></mtd>
            </mtr>
          </mtable>
        </mrow>
      en: "f of x is equal to; 3 cases,
                case 1; negative 1 if x; is less than 0;
                case 2; 0 if x, is equal to 0;
                case 3; 1 if x, is greater than 0;"

- property: system-of-equations
  type: table
  applicability: mtable
  effect: "the table should be read in a style suitable for displayed equations (and inequations)"
  examples:
   - mathml: |
      <mtable intent=':system-of-equations'>
        <mtr>
         <mtd columnalign='right'>
          <mn>2</mn><mo>&#x2062;</mo><mi>x</mi>
         </mtd>
         <mtd columnalign='center'>
          <mo>=</mo>
         </mtd>
         <mtd columnalign='left'>
          <mn>1</mn>
         </mtd>
        </mtr>
        <mtr>
         <mtd columnalign='right'>
          <mi>y</mi>
         </mtd>
         <mtd columnalign='center'>
          <mo>></mo>
         </mtd>
         <mtd columnalign='left'>
          <mi>x</mi><mo>&#x2212;</mo><mn>3</mn>
         </mtd>
        </mtr>
       </mtable>
     en: 2 equations; equation 1; 2 x, is equal to, 1; equation 2; y, is greater than, x minus 3;


- property: lines
  type: table
  applicability: mtable
  effect: the table should be read without implying any mathematical context other than a multi-line display


- property: continued-row
  type: table
  applicability: mtr
  effect: indicates that the row continues an equation wrapped from the row above

- property: by-row
  type: table
  applicability: mtable
  effect: indicates that the table should be read row by row

- property: by-column
  type: table
  applicability: mtable
  effect: indicates that the table should be read column by column


- property: number-set
  type: mathematical-category
  applicability: mi
  examples:
    - mathml: '<mi intent=":number-set">ℂ</mi>'
      en: [ complex numbers, c ]

- property: largeop
  type: mathematical-category
  applicability: intent function, msub, msubsup munder munderover
  examples:
    - intent: 'sum:largeop(0,n,$arg)'
      en: the sum from 0 to n of arg
    - intent: 'sum:largeop($C,$arg)'
      en: the sum over C of arg
    - mathml: |
        <mrow>
         <munderover intent=":largeop">
          <mo>∑</mo>
          <mn>0</mn>
          <mi>n</mi>
         </munderover>
         <msup><mi>i</mi><m>2</m></msup>
        </mrow>
      en: the sum from 0 to n of i squared
    - mathml: |
        <mrow>
         <munderover intent=":largeop">
          <mo>∑</mo>
          <mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow>
          <mi>n</mi>
         </munderover>
         <msup><mi>i</mi><m>2</m></msup>
        </mrow>
      en:
        - the sum from i equals 0 to n of i squared
        - the sum as i goes from 0 to n of i squared
    - mathml: |
        <mrow>
         <munder intent=":largeop">
          <mo>∑</mo>
          <mrow><mi>i</mi><mo>∈</mo><mi>I</mi></mrow>
         </munder>
         <msup><mi>i</mi><m>2</m></msup>
        </mrow>
      en: the sum over i in cap i of i squared
    - mathml: |
        <mrow intent="sum:largeop($from,$to,$exp)">
         <munderover>
          <mo>∑</mo>
          <mn arg="from">0</mn>
          <mi arg="to">n</mi>
         </munderover>
         <msup arg="exp"><mi>i</mi><m>2</m></msup>
        </mrow>
      en: the sum from 0 to n of i squared



- property: unit
  type: units-and-currency
  applicability: mi
  examples:
    - mathml: "<mrow><mn>1.5</mn><mi intent=':unit'>km</mi></mrow>"
      en: 1.5 kilometres
    - mathml: "<mrow><mn>2</mn><mi mathvariant='normal' intent=':unit'>Ω</mi></mrow>"
      en: 2 ohms
  comment:
  - "This includes SI units, English units, etc. It also includes radians, degrees, etc."

- property: currency
  type: units-and-currency
  applicability: mi
  examples:
    - mathml: "<mrow><mi mathvariant='normal' intent=':currency'>$</mi><mn>1.50</mn></mrow>"
      en: 1.50 dollars
    - mathml: "<mrow><mn>1.50</mn><mi intent=':currency'>USD</mi></mrow>"
      en: 1.50 U S dollars
    - mathml: "<mrow><mi mathvariant='normal' intent=':currency'>£</mi><mn>1.50</mn></mrow>"
      en: 1.50 pounds
      

- property: roman-numeral
  type: number
  applicability: mn
  comment: some braille codes (e.g., CMU) have special rules for roman numerals
  examples:
    - mathml: "<mi intent=':roman-numeral'>cd</mi>"
      en: c d
    - mathml: "<mi intent=':roman-numeral'>XVI</mi>"
      en: x v i
    - mathml: "<mrow intent=':roman-numeral'>
          <menclose notation='top'><menclose notation='top'><mi>VI</mi></menclose></menclose>
          <menclose notation='top'><mi>XL</mi></menclose>
          <mi>DXXI</mi>
        </mrow>"
      en: ???

- property: shape
  type: geometry
  applicability: mo
  comment: there are many shape characters in unicode, including filled and shaded ones. Some have mathematical meaning. The shape property is used when they are meant to be used as a geometric shape.
  examples:
    - mathml: "<mo intent=':shape'>▭</mo><mi>A</mi><mi>B</mi><mi>C</mi><mi>D</mi>"
      en: rectangle A B C D

- property: chemical-element
  type: chemistry
  examples:
    - mathml:
        "<mrow intent=':chemical-formula'>
          <mmultiscripts>
            <mi mathvariant='normal' intent=':chemical-element'>H</mi>
            <mn>2</mn>
            <mrow/>
          </mmultiscripts>
          <mi mathvariant='normal' intent=':chemical-element'>O</mi>
        </mrow>"
      en: cap h 2 cap o


- property: chemical-equation
  type: chemistry
  effect: read the term as a chemical equation
  examples:
   - mathml: |
      <mrow intent=':chemical-equation'>
       <mrow intent=':chemical-equation'>
        <mn>2</mn>
        <mo>&#x2062;</mo>
        <mrow intent=':chemical-equation'>
         <mmultiscripts intent=':chemical-formula'>
          <mi mathvariant='normal' intent=':chemical-element'>H</mi>
          <mn>2</mn>
          <mrow/>
         </mmultiscripts>
         <mo>&#x2063;</mo>
         <mi mathvariant='normal' intent=':chemical-element'>O</mi>
        </mrow>
       </mrow>
       <mo>⟶</mo>
       <mrow intent=':chemical-equation'>
        <mrow intent=':chemical-equation'>
         <mn>2</mn>
         <mo>&#x2062;</mo>
         <mmultiscripts intent=':chemical-formula'>
          <mi mathvariant='normal' intent=':chemical-element'>H</mi>
          <mn>2</mn>
          <mrow/>
         </mmultiscripts>
        </mrow>
        <mo>+</mo>
        <mmultiscripts intent=':chemical-formula'>
         <mi mathvariant='normal' intent=':chemical-element'>O</mi>
         <mn>2</mn>
         <mrow/>
        </mmultiscripts>
       </mrow>
      </mrow>
     en: '2,  cap h, sub 2;  cap o; reacts to form; 2  cap h, sub 2; plus  cap o, sub 2'
     